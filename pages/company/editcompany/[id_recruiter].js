import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { React, useEffect, useRef, useState } from "react";
import styles from "../../../styles/Profile.module.css";
import axios from "axios";

const Company = () => {
	const router = useRouter();
	const { id_recruiter } = router.query;

	const [data, setData] = useState([]);
	const [form, setForm] = useState({
		perusahaan: null,
		bidang: null,
		kota: null,
		bio: null,
		email: null,
		instagram: null,
		phone: null,
		linkedin: null,
	});
	const [addImage, setAddImage] = useState();
	const [delAccout, setDelAccount] = useState([]);

	const fileInput = useRef(null);

	// Get user data
	useEffect(() => {
		if (id_recruiter) {
			axios
				.get(`${process.env.NEXT_PUBLIC_BACKEND_URL}/recruiter/${id_recruiter}`)
				.then((response) => {
					setData(response.data.data.rows[0]);
				})
				.catch((error) => {
					// console.log(error);
				});
		}
	}, [router.isReady, id_recruiter]);
	// Batas get user data

	// Delete account
	const deleteAccount = (id_recruiter, e) => {
		e.preventDefault();

		axios
			.delete(
				`${process.env.NEXT_PUBLIC_BACKEND_URL}/recruiter/${id_recruiter}`
			)
			.then((response) => {
				// console.log(response);
				const posts = delAccout.filter(
					(item) => item.id_recruiter !== id_recruiter
				);

				setDelAccount({ data: posts });
				alert("Data berhasil dihapus");
				localStorage.clear();
				router.push("/login");
			});
	};
	// Batas delete account

	// Update Image
	const handleClick = (e) => {
		fileInput.current.click();
	};

	const handleChange = (e) => {
		const fileUploaded = e.target.files[0];
		document.getElementById("updatePics").innerHTML = fileUploaded.name;
		setAddImage(fileUploaded);
	};

	const updatePhoto = (e) => {
		e.preventDefault();
		const { id_recruiter } = router.query;

		let inputImage = new FormData();
		inputImage.append("profile_pic", addImage);

		console.log(addImage);

		axios
			.put(
				`${process.env.NEXT_PUBLIC_BACKEND_URL}/recruiter/image/${id_recruiter}`,
				inputImage
			)
			.then((response) => {
				console.log(response);
				alert("Photo berhasil diganti");
				localStorage.setItem("data", JSON.stringify(data));
				router.push(`/company/${data.id_recruiter}`);
			})
			.catch((error) => {
				// console.log(error);
			});
	};
	// Batas update image

	// Update informasi user
	const updateUser = (e) => {
		e.preventDefault();

		const { id_recruiter } = router.query;

		axios
			.put(
				`${process.env.NEXT_PUBLIC_BACKEND_URL}/recruiter/${id_recruiter}`,
				form
			)
			.then((response) => {
				console.log(response);
				alert("Profil berhasil diupdate");
				return router.push(`/company/${data.id_recruiter}`);
				// localStorage.setItem("data", JSON.stringisfy(data));
			})
			.catch((error) => {
				// console.log(error);
			});
	};
	// batas update informasi user

	return (
		<>
			<Head>
				<title>Edit Profile</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/Logo.png" />
			</Head>
			<div className="container-fluid row">
				<div className="position-absolute translate-middle-y ps-5 my-5">
					<div className="row col-11 ms-5 position-absolute my-5">
						<div className=" col-md-3 col-9 me-md-4 position-relative">
							{/* <form> */}
							<form onSubmit={(e) => updatePhoto(e)}>
								<section className={`${styles.cards} p-3`}>
									<Image
										src={`${process.env.NEXT_PUBLIC_BACKEND_URL}/${data.profile_pic}`}
										width={135}
										height={135}
										className={`mx-auto d-block my-3 ${styles.profileImg}`}
										priority={true}
										alt={`Profile picture`}
									/>
									<div className={`row ${styles.editPicture} my-3 d-flex`}>
										<input
											style={{ display: "none" }}
											id="updatePics"
											type="file"
											ref={fileInput}
											onChange={handleChange}
										/>
										<Image
											src="/edit.png"
											width={16}
											height={16}
											className="col-auto"
											alt="Edit"
										/>
										<p
											className={`col-auto ${styles.text} ${styles.textAddress}`}
											onClick={handleClick}>
											Edit
										</p>
									</div>
									<h4>{data.perusahaan}</h4>
									<p>{data.bidang}</p>
									<div className="row">
										<Image
											src="/map.png"
											width={14}
											height={14}
											className="col-auto"
											alt="Domisili"
										/>
										<p
											className={`col-auto ${styles.text} ${styles.textAddress}`}>
											{data.kota}
										</p>
									</div>
								</section>
								<button
									type="submit"
									class={`${styles.searchBtn} px-4 col-md-12 col-9 my-3`}>
									Simpan
								</button>
								<button
									type="submit"
									class={`${styles.cancelBtn} px-4 col-md-12 col-9`}
									onClick={(e) => deleteAccount(data.id_recruiter, e)}>
									Delete Account
								</button>
							</form>
						</div>
						<div className="position-relative col-md-8 col-9 ms-md-4">
							<section className={`${styles.cards} p-3`}>
								<div className="p-3">
									<h3>Data Perusahaan</h3>
								</div>
								<div className="border"></div>
								<form className="col-12 p-3" onSubmit={(e) => updateUser(e)}>
									{/* <form className="col-12 p-3"> */}
									<div className="mb-4">
										<label
											htmlFor="companyName"
											className={`form-label ${styles.text}`}>
											Nama Perusahaan
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="companyName"
											placeholder="Masukan nama perusahaan"
											onChange={(e) => {
												setForm({ ...form, perusahaan: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="bidang"
											className={`form-label ${styles.text}`}>
											Bidang
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="bidang"
											placeholder="Masukan bidang perusahaan ex: Financial"
											onChange={(e) => {
												setForm({ ...form, bidang: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="kota"
											className={`form-label ${styles.text}`}>
											Kota
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="kota"
											placeholder="Masukan kota"
											onChange={(e) => {
												setForm({ ...form, kota: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="tempatKerja"
											className={`form-label ${styles.text}`}>
											Deskripsi singkat
										</label>
										<textarea
											type="text"
											className={`form-control ${styles.textarea}`}
											id="textarea"
											placeholder="Masukkan deskripsi singkat"
											onChange={(e) => {
												setForm({ ...form, bio: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="emailInput"
											className={`form-label ${styles.text}`}>
											Email
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="emailInput"
											placeholder="Masukan email"
											onChange={(e) => {
												setForm({ ...form, email: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="instagram"
											className={`form-label ${styles.text}`}>
											Instagram
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="instagram"
											placeholder="Masukan instagram"
											onChange={(e) => {
												setForm({ ...form, instagram: e.target.value });
											}}
										/>
									</div>
									<div className="mb-4">
										<label
											htmlFor="linkedin"
											className={`form-label ${styles.text}`}>
											Linkedin
										</label>
										<input
											type="text"
											className={`form-control ${styles.input}`}
											id="linkedin"
											placeholder="Masukan linkedin"
											onChange={(e) => {
												setForm({ ...form, linkedin: e.target.value });
											}}
										/>
									</div>
									<button
										className={`${styles.searchBtn} col-12`}
										type="submit">
										Submit
									</button>
								</form>
							</section>
						</div>
					</div>
				</div>
			</div>
			<div className={`${styles.bgUngu} position-relative top-0`}></div>
			<div className={`${styles.bgPutihPerusahaan}`}></div>
		</>
	);
};

Company.layout = "L3";

export default Company;
